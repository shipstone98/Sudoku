<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SystemExtensions</name>
    </assembly>
    <members>
        <member name="T:SystemExtensions.FrequencyTable`1">
            <summary>
            Represents a strongly typed collection of objects and their frequencies.
            </summary>
            <typeparam name="T">The type of elements in the frequency table.</typeparam>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SystemExtensions.FrequencyTable`1"/> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SystemExtensions.FrequencyTable`1"/> class that contains elements copied from the specified <c><paramref name="collection"/></c> and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new frequency table.</param>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="collection"/></c> is <c>null</c>.</exception>
        </member>
        <member name="P:SystemExtensions.FrequencyTable`1.Item(`0)">
            <summary>
            Gets or sets the frequency of the specified <c><paramref name="element"/></c>.
            </summary>
            <param name="element">The element to get the frequency of.</param>
            <returns>The frequency of the specified <c><paramref name="element"/></c>.</returns>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="element"/></c> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>value</c> is less than 0.</exception>
        </member>
        <member name="P:SystemExtensions.FrequencyTable`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
        </member>
        <member name="P:SystemExtensions.FrequencyTable`1.IsReadOnly">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:SystemExtensions.FrequencyTable`1.TotalCount">
            <summary>
            Gets the total count of frequencies of all elements in the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Add(`0)">
            <summary>
            Adds an object to the frequency table. If it is not already present, then its frequency is set to 1; otherwise, its frequency is incremented by 1.
            </summary>
            <param name="item">The object to be added to the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</param>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="item"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of objects to the frequency table.
            </summary>
            <param name="collection">The collection of objects to be added to the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</param>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="collection"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Clear">
            <summary>
            Removes all items from the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Contains(`0)">
            <summary>
            Determines whether an element is in the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</param>
            <returns><c>true</c> if <c><paramref name="item"/></c> is found in the <see cref="T:SystemExtensions.FrequencyTable`1"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="item"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SystemExtensions.FrequencyTable`1"/> to a compatible one-dimensional array, starting at the specified <c><paramref name="arrayIndex"/></c> of the target <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:SystemExtensions.FrequencyTable`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <c><paramref name="array"/></c> at which copying begins.</param>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:SystemExtensions.FrequencyTable`1"/> is greater than the available space from <c><paramref name="arrayIndex"/></c> to the end of the destination <c><paramref name="array"/></c>.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><c><paramref name="arrayIndex"/></c> is less than 0.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.GetAllWithFrequency(System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the specified <c><paramref name="frequency"/></c> to a new array.
            </summary>
            <param name="frequency">The frequency that all elements matching will be returned.</param>
            <returns>An array containing copies of the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the specified <c><paramref name="frequency"/></c>.</returns>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
            <returns>An enumerator that can be used to iterate through the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</returns>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</returns>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.GetHighest">
            <summary>
            Copies the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the highest frequency to a new array.
            </summary>
            <returns>An array containing copies of the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the highest frequency.</returns>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.GetLowest">
            <summary>
            Copies the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the lowest frequency to a new array.
            </summary>
            <returns>An array containing copies of the elements of the <see cref="T:SystemExtensions.FrequencyTable`1"/> with the lowest frequency.</returns>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.RemoveAll(`0)">
            <summary>
            Removes the specified <c><paramref name="item"/></c> from the <see cref="T:SystemExtensions.FrequencyTable`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</param>
            <returns>The frequency of <c><paramref name="item"/></c> before it was removed.</returns>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="item"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Remove(`0)">
            <summary>
            Removes the specified <c><paramref name="item"/></c> from the <see cref="T:SystemExtensions.FrequencyTable`1"/>. If its count is 1 then it is removed from the table; otherwise, its frequency is decremented by 1.
            </summary>
            <param name="item">The object to remove from the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</param>
            <returns><c>true</c> if <c><paramref name="item"/></c> is successfully removed; otherwise, <c>false</c>. This method also returns <c>false</c> if <c><paramref name="item"/></c> was not found in the <see cref="T:SystemExtensions.FrequencyTable`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="item"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.FrequencyTable`1.Sort">
            <summary>
            Sorts the elements in the <see cref="T:SystemExtensions.FrequencyTable`1"/> in order from lowest frequency to highest frequency.
            </summary>
        </member>
        <member name="T:SystemExtensions.MathExtensions">
            <summary>
            Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions. This is an extension class to the <see cref="T:System.Math"/> class.
            </summary>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetFactors(System.UInt64)">
            <summary>
            Creates a new array containing all factors of <c><paramref name="x"/></c>.
            </summary>
            <param name="x">A positive integer to get all factors of.</param>
            <returns>A new array containing all factors of <c><paramref name="x"/></c>.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMax(System.Double[])">
            <summary>
            Calculate the mean average of the highest values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the mean average of highest values from.</param>
            <returns>The mean average of the highest values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMax``1(``0[])">
            <summary>
            Creates a new array containing the highest elements in <c><paramref name="array"/></c>.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the highest elements from.</param>
            <returns>A new array containing the highest elements in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMean(System.Double[])">
            <summary>
            Calculate the mean average of the values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the mean average of values from.</param>
            <returns>The mean average of the values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMedian(System.Double[])">
            <summary>
            Calculates the median average of the values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the median average of values from.</param>
            <returns>The median average of the values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMedian``1(``0[])">
            <summary>
            Creates a new array containing the "middle" values of the elements in <c><paramref name="array"/></c>.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the median average of elements from.</param>
            <returns>A new array containing the "middle" values of the elements in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMedian``1(``0[],System.Int32,System.Int32)">
            <summary>
            Creates a new array containing the "middle" values of the elements in <c><paramref name="array"/></c> across a specified range.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the median average of elements from.</param>
            <param name="index">The zero-based starting index of the range to get.</param>
            <param name="count">The number of elements in the range to get.</param>
            <returns>A new array containing the "middle" values of the elements in the specified range of <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0 OR <c><paramref name="index"/></c> and/or <c><paramref name="count"/></c> do not denote a valid range of elements in <c><paramref name="array"/></c>.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><c><paramref name="index"/></c> is less than 0.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMin(System.Double[])">
            <summary>
            Calculate the mean average of the lowest values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the mean average of lowest values from.</param>
            <returns>The mean average of the lowest values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMin``1(``0[])">
            <summary>
            Creates a new array containing the lowest elements in <c><paramref name="array"/></c>.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the lowest elements from.</param>
            <returns>A new array containing the lowest elements in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMode(System.Double[])">
            <summary>
            Calculates the modal average of the values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the modal average of values from.</param>
            <returns>The modal average of the values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetMode``1(``0[])">
            <summary>
            Creates a new array containing the most occurring elements in <c><paramref name="array"/></c>.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the most occurring elements from.</param>
            <returns>A new array containing the most occurring elements in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetQuartiles(System.Double[],System.Double@,System.Double@)">
            <summary>
            Calculates the upper and lower quartiles and median average of the values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the quartiles from.</param>
            <param name="upper">The upper quartile.</param>
            <param name="lower">The lower quartile.</param>
            <returns>The median average of the values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetQuartiles``1(``0[],``0[]@,``0[]@)">
            <summary>
            Creates a new array containing the upper and lower quartiles of the elements in <c><paramref name="array"/></c>.
            </summary>
            <typeparam name="T">The type of elements in the <c><paramref name="array"/></c>.</typeparam>
            <param name="array">The zero-based array to get the quartiles from.</param>
            <param name="upper">A new array containing the upper quartiles of the elements in <c><paramref name="array"/></c>.</param>
            <param name="lower">A new array containing the lower quartiles of the elements in <c><paramref name="array"/></c>.</param>
            <returns>A new array containing the "middle" values of the elements in the specified range of <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetRange(System.Double[])">
            <summary>
            Calculate the range of values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the range from.</param>
            <returns>The range of values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetRange(System.Double[],System.Double@,System.Double@)">
            <summary>
            Calculate the range of values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the range from.</param>
            <param name="max">The mean average of the highest values in <c><paramref name="array"/></c>.</param>
            <param name="min">The mean average of the lowest values in <c><paramref name="array"/></c>.</param>
            <returns>The range of values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.GetVariance(System.Double[],System.Double)">
            <summary>
            Calculate the population variance of values in <c><paramref name="array"/></c>.
            </summary>
            <param name="array">The zero-based array to calculate the variance from.</param>
            <param name="mean">The mean average of values in <c><paramref name="array"/></c>.</param>
            <returns>The population variance of values in <c><paramref name="array"/></c>.</returns>
            <exception cref="T:System.ArgumentException">The length of <c><paramref name="array"/></c> is 0.</exception>
            <exception cref="T:System.ArgumentNullException"><c><paramref name="array"/></c> is <c>null</c>.</exception>
        </member>
        <member name="M:SystemExtensions.MathExtensions.IsCube(System.Int64)">
            <summary>
            Determines whether <c><paramref name="x"/></c> is a cubic number.
            </summary>
            <param name="x">The integer to determine.</param>
            <returns><c>true</c> if <c><paramref name="x"/></c> is a cubic number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.IsPrime(System.UInt64)">
            <summary>
            Determines whether <c><paramref name="x"/></c> is a prime number (i.e. <c><paramref name="x"/></c> has 2 distinct factors).
            </summary>
            <param name="x">The positive integer to determine.</param>
            <returns><c>true</c> if <c><paramref name="x"/></c> is a prime number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.IsSquare(System.UInt64)">
            <summary>
            Determines whether <c><paramref name="x"/></c> is a square number.
            </summary>
            <param name="x">The positive integer to determine.</param>
            <returns><c>true</c> if <c><paramref name="x"/></c> is a square number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.Pythag(System.Double,System.Double)">
            <summary>
            Calculates the result of the equation <c><paramref name="a"/>^2 + <paramref name="b"/>^2 = c^2</c> (i.e. the Pythagorean theorem) and returns <c>c</c>.
            </summary>
            <param name="a">The first of two numbers to be squared.</param>
            <param name="b">The second of two numbers to be squared.</param>
            <returns>The square root of the result of the formula <c><paramref name="a"/>^2 + <paramref name="b"/>^2</c>.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.ScalarToComplex(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Numerics.Complex"/> structure using the specified <c><paramref name="scalar"/></c> value.
            </summary>
            <param name="scalar">A scalar value to convert.</param>
            <returns>A new instance of the <see cref="T:System.Numerics.Complex"/> structure using the specified <c><paramref name="scalar"/></c> value.</returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.ScalarToComplex(System.Numerics.Complex,System.Double)">
            <summary>
            Multiplies the <see cref="T:System.Numerics.Complex"/> number <c><paramref name="x"/></c> by the specified <c><paramref name="scalar"/></c>.
            </summary>
            <param name="x">The <see cref="T:System.Numerics.Complex"/> number to be multiplied.</param>
            <param name="scalar">The scalar value to multiply <c><paramref name="x"/></c> by.</param>
            <returns>The <see cref="T:System.Numerics.Complex"/> number <c><paramref name="x"/></c> by the specified <c><paramref name="scalar"/></c></returns>
        </member>
        <member name="M:SystemExtensions.MathExtensions.SolveQuadratic(System.Double,System.Double,System.Double,System.Numerics.Complex@,System.Numerics.Complex@)">
            <summary>
            Solves the quadratic equation given by <c><paramref name="a"/>x^2 + <paramref name="b"/>x + <paramref name="c"/> = 0</c> and stores the result in <c><paramref name="x1"/></c> and <c><paramref name="x2"/></c>.
            </summary>
            <param name="a">The <c>x^2</c> coefficient of the equation. This must not be 0.</param>
            <param name="b">The <c>x</c> coefficient of the equation.</param>
            <param name="c">The linear coefficient of the equation.</param>
            <param name="x1">The first root of the equation.</param>
            <param name="x2">The second root of the equation.</param>
            <returns>2 if there are 2 distinct, real roots; 1 if there are 2 equal real roots; 0 if there are 2 imaginary roots.</returns>
            <exception cref="T:System.ArgumentException"><c><paramref name="a"/></c> is 0.</exception>
        </member>
    </members>
</doc>
